name: release


concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

on:
  release:
    types: [ published ]
  repository_dispatch:
    types: [ release, crates-io ]
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to crates.io?'
        required: true
        default: false
        type: boolean
      prerelease:
        description: 'Is this a pre-release?'
        required: true
        default: false
        type: boolean

permissions:
  checks: read
  contents: read
  deployments: write
  packages: write
  id-token: write

jobs:
  crates-io:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'crates-io' || github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true'
    permissions:
      contents: read
      packages: write
      deployments: write
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        package: [ template-rs-cloudflare ]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: Publish (${{ matrix.package }})
        run: cargo publish --locked --all-features --package ${{ matrix.package }}
  release:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'release' || github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'false'
    env:
      IS_PRERELEASE: ${{ github.event.release.prerelease || github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease }} 
    permissions: write-all
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: setup rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: cache
        uses: Swatinem/rust-cache@v2
      - 
        name: build
        run: cargo build -r --locked --workspace -F app --target wasm32-unknown-unknown
      - 
        name: Include Release Artifacts
        uses: softprops/action-gh-release@v2
        with:
          append_body: false
          generate_release_notes: true
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}
          name: ${{ github.event.release.name }}
          tag_name: ${{ github.event.release.tag_name }}
          body: |
            # ${{ github.event.repository.name }} (${{ github.event.release.tag_name }})

            ## Release Notes
            
            ${{ github.event.release.body }}

            ## Artifacts
            
          files: |
            target/release/proton
