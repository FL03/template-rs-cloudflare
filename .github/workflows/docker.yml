name: docker

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CONTAINER_IMAGE_NAME: ${{ github.event.repository.name }}
  CONTAINER_PLATFORMS: linux/amd64
  RUSTC_VERSION: 1.86.0
  CONTAINER_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.env.CONTAINER_IMAGE_NAME }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  CONTAINER_REGISTRY_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
on:
  pull_request:
    branches: [ main, master ]
    types: [ opened, reopened, synchronize ]
  push:
    branches: [ main, master ]
    tags: [ v*.*.*, "*-nightly" ]
  repository_dispatch:
    types: [ docker ]
  workflow_dispatch:

permissions:
  attestations: write
  contents: read
  id-token: write
  packages: write

jobs:
  native:
    outputs:
      name: ${{ env.CONTAINER_IMAGE_NAME }}
      digest: ${{ steps.builder.outputs.digest }}
      tags: ${{ steps.metadata.outputs.tags }}
      version: ${{ steps.metadata.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - 
        name: checkout
        uses: actions/checkout@v4
      - 
        id: metadata
        name: Container Metadata
        uses: docker/metadata-action@v5
        with:
          flavor: latest=true,prefix=debian-
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=template-rs-cloudflare
            org.opencontainers.image.vendor=Scattered-Systems, LLC
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      -
        name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Authenticate DockerHub
        uses: docker/login-action@v3
        with:
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
      - 
        id: builder
        name: Build and Push (native)
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./.docker/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ env.CONTAINER_PLATFORMS }}
          tags: ${{ steps.metadata.outputs.tags }}
  wasm:
    outputs:
      name: ${{ env.CONTAINER_IMAGE_NAME }}
      digest: ${{ steps.builder.outputs.digest }}
      tags: ${{ steps.metadata.outputs.tags }}
      version: ${{ steps.metadata.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - 
        name: checkout
        uses: actions/checkout@v4
      - 
        name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Authenticate Container Registry
        uses: docker/login-action@v3
        with:
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
      - 
        id: metadata
        name: Container Metadata (wasm)
        uses: docker/metadata-action@v5
        with:
          flavor: latest=true,prefix=wasm-
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=template-rs-cloudflare
            org.opencontainers.image.vendor=Scattered-Systems, LLC
          tags: |
            type=semver,pattern={{prefix}}-{{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            wasm
      -
        id: builder
        name: Build and Push (web)
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./.docker/web.dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: wasi/wasm
          tags: ${{ steps.metadata.outputs.tags }}
  attestation:
    continue-on-error: true
    needs: [ native, wasm ]
    strategy:
      fail-fast: false
      matrix:
        container: [ native, wasm ]
    runs-on: ubuntu-latest
    steps:
      - 
        if: ${{ matrix.container == 'native' }}
        name: Create Attestation (${{ matrix.container }})
        uses: actions/attest-build-provenance@v2
        with:
          push-to-registry: false
          subject-digest: ${{ needs.native.outputs.digest }}
          subject-name: ${{ needs.native.outputs.name }}:native-${{ needs.native.outputs.version }}
      -
        if: ${{ matrix.container == 'wasm' }}
        name: Create Attestation (${{ matrix.container }})
        uses: actions/attest-build-provenance@v2
        with:
          push-to-registry: false
          subject-digest: ${{ needs.wasm.outputs.digest }}
          subject-name: ${{ needs.wasm.outputs.name }}:wasm-${{ needs.wasm.outputs.version }}
