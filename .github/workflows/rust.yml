name: rust

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  pull_request:
    branches: [ main, master, ]
    types: [ opened, reopened, synchronize ]
    paths:
      - bin/*
      - src/*
      - Cargo.*
  push:
    branches: [ main, master ]
    tags: [ latest, "v*.*.*", "*-alpha", "*-beta", "*-canary", "*-nightly" ]
    paths:
      - bin/*
      - src/*
      - Cargo.*
  repository_dispatch:
    types: [ rust ]
  workflow_dispatch:


jobs:
  workspace:
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: 1
      RUSTC_VERSION: 1.86.0
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest ]
        target: [ wasm32-unknown-unknown ]
        include:
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: true
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
          target: ${{ matrix.target }}
      - 
        name: Setup cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      -
        name: Install required tools
        run: cargo binstall -y wasm-pack worker-build
      - 
        name: Build
        run: cargo build --locked --release --workspace --all-features --target ${{ matrix.target }}
      - 
        name: Test
        run: cargo test --locked --release --workspace --all-features --target ${{ matrix.target }}
