name: rust

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTC_VERSION: 1.86.0

on:
  pull_request:
    branches: [ main, master, ]
    types: [ opened, reopened, synchronize ]
  push:
    branches: [ main, master ]
    tags: [ latest, "v*.*.*", "*-alpha", "*-beta", "*-canary", "*-nightly" ]
    paths:
      - /**/*.rs
      - bin/*
      - src/*
      - Cargo.*
  repository_dispatch:
    types: [ rust ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Target to build for'
        required: true
        default: wasm32-unknown-unknown
        type: string
      publish:
        description: 'Publish to crates.io'
        required: true
        default: false
        type: boolean

permissions:
  contents: read
  deployments: write

jobs:
  native:
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - name: cargo build
        run: cargo build --locked --release --workspace --features native
      - name: cargo test
        run: cargo test --locked --release --workspace --features native
  web:
    strategy:
      fail-fast: false
      matrix:
        features: [ web ]
        target: [ wasm32-unknown-unknown ]
        include:
          - target: wasm32-unknown-unknown
            feature: web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
          target: ${{ matrix.target }}
      - name: build (${{ matrix.target }})
        run: cargo build --locked --release --workspace --features ${{ matrix.features }} --target ${{ matrix.target }}
  crates-io:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Publish to crates.io
        run: cargo publish --locked --release --package ${{ github.event.repository.name }}
